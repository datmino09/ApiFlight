const { book } = require('../models');  // Import t·ª´ db ƒë√£ kh·ªüi t·∫°o c√°c m√¥ h√¨nh
const { requestWithRetry, AMADEUS_API } = require('../utils/amadeus');
const axios = require('axios');

class FlightController {
    // T√¨m ki·∫øm chuy·∫øn bay
    async searchFlight(req, res) {
        try {
            const { origin, destination, date } = req.query;
            console.log("üîç T√¨m ki·∫øm chuy·∫øn bay:", { origin, destination, date });
            if (!origin || !destination || !date) {
                return res.status(400).json({ error: "Thi·∫øu th√¥ng tin chuy·∫øn bay!" });
            }

            const response = await requestWithRetry(`${AMADEUS_API}/v2/shopping/flight-offers`, 
                { originLocationCode: origin, destinationLocationCode: destination, departureDate: date, adults: 1 });

            res.json(response.data);
        } catch (error) {
            console.error("‚ùå L·ªói khi t√¨m chuy·∫øn bay:", error.response?.data || error.message);
            res.status(500).json({ error: error.response?.data || error.message });
        }
    }

    // ƒê·∫∑t v√©
    async bookFlight(req, res) {
        const orderData = req.body;  // Nh·∫≠n d·ªØ li·ªáu t·ª´ ph√≠a client

        // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o
        if (!orderData.flightOfferId || !orderData.firstName || !orderData.lastName || !orderData.email) {
            return res.status(400).json({ error: 'Thi·∫øu th√¥ng tin ƒë·∫∑t v√©!' });
        }

        try {
            // L∆∞u th√¥ng tin ƒë∆°n ƒë·∫∑t v√© v√†o c∆° s·ªü d·ªØ li·ªáu
            const newBooking = await book.create({
                flightOfferId: orderData.flightOfferId, // D·ªØ li·ªáu chuy·∫øn bay t·ª´ client
                firstName: orderData.firstName,
                lastName: orderData.lastName,
                email: orderData.email,
                bookingDate: new Date(),
            });

            res.status(200).json({
                message: 'ƒê·∫∑t v√© th√†nh c√¥ng!',
                bookingId: newBooking.id,
                flightOfferId: newBooking.flightOfferId,  // ID chuy·∫øn bay t·ª´ client
            });
        } catch (error) {
            console.error('‚ùå L·ªói khi l∆∞u th√¥ng tin ƒë·∫∑t v√©:', error.message);
            res.status(500).json({
                error: 'L·ªói khi th·ª±c hi·ªán ƒë·∫∑t v√©',
                details: error.message
            });
        }
    }
}

module.exports = new FlightController();
